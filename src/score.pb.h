// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: score.proto
// Protobuf C++ Version: 5.29.3

#ifndef score_2eproto_2epb_2eh
#define score_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_score_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_score_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_score_2eproto;
namespace score {
class CalculateScoreRequest;
struct CalculateScoreRequestDefaultTypeInternal;
extern CalculateScoreRequestDefaultTypeInternal _CalculateScoreRequest_default_instance_;
class CalculateScoreRequest_ScoresEntry_DoNotUse;
struct CalculateScoreRequest_ScoresEntry_DoNotUseDefaultTypeInternal;
extern CalculateScoreRequest_ScoresEntry_DoNotUseDefaultTypeInternal _CalculateScoreRequest_ScoresEntry_DoNotUse_default_instance_;
class CalculateScoreResponse;
struct CalculateScoreResponseDefaultTypeInternal;
extern CalculateScoreResponseDefaultTypeInternal _CalculateScoreResponse_default_instance_;
}  // namespace score
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace score {

// ===================================================================


// -------------------------------------------------------------------

class CalculateScoreResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:score.CalculateScoreResponse) */ {
 public:
  inline CalculateScoreResponse() : CalculateScoreResponse(nullptr) {}
  ~CalculateScoreResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CalculateScoreResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CalculateScoreResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalculateScoreResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CalculateScoreResponse(const CalculateScoreResponse& from) : CalculateScoreResponse(nullptr, from) {}
  inline CalculateScoreResponse(CalculateScoreResponse&& from) noexcept
      : CalculateScoreResponse(nullptr, std::move(from)) {}
  inline CalculateScoreResponse& operator=(const CalculateScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculateScoreResponse& operator=(CalculateScoreResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculateScoreResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculateScoreResponse* internal_default_instance() {
    return reinterpret_cast<const CalculateScoreResponse*>(
        &_CalculateScoreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CalculateScoreResponse& a, CalculateScoreResponse& b) { a.Swap(&b); }
  inline void Swap(CalculateScoreResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculateScoreResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculateScoreResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CalculateScoreResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculateScoreResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalculateScoreResponse& from) { CalculateScoreResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CalculateScoreResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "score.CalculateScoreResponse"; }

 protected:
  explicit CalculateScoreResponse(::google::protobuf::Arena* arena);
  CalculateScoreResponse(::google::protobuf::Arena* arena, const CalculateScoreResponse& from);
  CalculateScoreResponse(::google::protobuf::Arena* arena, CalculateScoreResponse&& from) noexcept
      : CalculateScoreResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFinalScoreFieldNumber = 1,
  };
  // int32 final_score = 1;
  void clear_final_score() ;
  ::int32_t final_score() const;
  void set_final_score(::int32_t value);

  private:
  ::int32_t _internal_final_score() const;
  void _internal_set_final_score(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:score.CalculateScoreResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CalculateScoreResponse& from_msg);
    ::int32_t final_score_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_score_2eproto;
};
// -------------------------------------------------------------------

class CalculateScoreRequest_ScoresEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  CalculateScoreRequest_ScoresEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalculateScoreRequest_ScoresEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CalculateScoreRequest_ScoresEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const CalculateScoreRequest_ScoresEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const CalculateScoreRequest_ScoresEntry_DoNotUse*>(
        &_CalculateScoreRequest_ScoresEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_score_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class CalculateScoreRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:score.CalculateScoreRequest) */ {
 public:
  inline CalculateScoreRequest() : CalculateScoreRequest(nullptr) {}
  ~CalculateScoreRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CalculateScoreRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CalculateScoreRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CalculateScoreRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CalculateScoreRequest(const CalculateScoreRequest& from) : CalculateScoreRequest(nullptr, from) {}
  inline CalculateScoreRequest(CalculateScoreRequest&& from) noexcept
      : CalculateScoreRequest(nullptr, std::move(from)) {}
  inline CalculateScoreRequest& operator=(const CalculateScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculateScoreRequest& operator=(CalculateScoreRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculateScoreRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculateScoreRequest* internal_default_instance() {
    return reinterpret_cast<const CalculateScoreRequest*>(
        &_CalculateScoreRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CalculateScoreRequest& a, CalculateScoreRequest& b) { a.Swap(&b); }
  inline void Swap(CalculateScoreRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculateScoreRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculateScoreRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CalculateScoreRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CalculateScoreRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CalculateScoreRequest& from) { CalculateScoreRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CalculateScoreRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "score.CalculateScoreRequest"; }

 protected:
  explicit CalculateScoreRequest(::google::protobuf::Arena* arena);
  CalculateScoreRequest(::google::protobuf::Arena* arena, const CalculateScoreRequest& from);
  CalculateScoreRequest(::google::protobuf::Arena* arena, CalculateScoreRequest&& from) noexcept
      : CalculateScoreRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScoresFieldNumber = 2,
    kTeamIdFieldNumber = 1,
  };
  // map<string, int32> scores = 2;
  int scores_size() const;
  private:
  int _internal_scores_size() const;

  public:
  void clear_scores() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& scores() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_scores();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_scores() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_scores();

  public:
  // string team_id = 1;
  void clear_team_id() ;
  const std::string& team_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_team_id(Arg_&& arg, Args_... args);
  std::string* mutable_team_id();
  PROTOBUF_NODISCARD std::string* release_team_id();
  void set_allocated_team_id(std::string* value);

  private:
  const std::string& _internal_team_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_team_id(
      const std::string& value);
  std::string* _internal_mutable_team_id();

  public:
  // @@protoc_insertion_point(class_scope:score.CalculateScoreRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CalculateScoreRequest& from_msg);
    ::google::protobuf::internal::MapField<CalculateScoreRequest_ScoresEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        scores_;
    ::google::protobuf::internal::ArenaStringPtr team_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_score_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CalculateScoreRequest

// string team_id = 1;
inline void CalculateScoreRequest::clear_team_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_id_.ClearToEmpty();
}
inline const std::string& CalculateScoreRequest::team_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:score.CalculateScoreRequest.team_id)
  return _internal_team_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CalculateScoreRequest::set_team_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:score.CalculateScoreRequest.team_id)
}
inline std::string* CalculateScoreRequest::mutable_team_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_team_id();
  // @@protoc_insertion_point(field_mutable:score.CalculateScoreRequest.team_id)
  return _s;
}
inline const std::string& CalculateScoreRequest::_internal_team_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.team_id_.Get();
}
inline void CalculateScoreRequest::_internal_set_team_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_id_.Set(value, GetArena());
}
inline std::string* CalculateScoreRequest::_internal_mutable_team_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.team_id_.Mutable( GetArena());
}
inline std::string* CalculateScoreRequest::release_team_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:score.CalculateScoreRequest.team_id)
  return _impl_.team_id_.Release();
}
inline void CalculateScoreRequest::set_allocated_team_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.team_id_.IsDefault()) {
    _impl_.team_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:score.CalculateScoreRequest.team_id)
}

// map<string, int32> scores = 2;
inline int CalculateScoreRequest::_internal_scores_size() const {
  return _internal_scores().size();
}
inline int CalculateScoreRequest::scores_size() const {
  return _internal_scores_size();
}
inline void CalculateScoreRequest::clear_scores() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scores_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& CalculateScoreRequest::_internal_scores() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scores_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& CalculateScoreRequest::scores() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:score.CalculateScoreRequest.scores)
  return _internal_scores();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* CalculateScoreRequest::_internal_mutable_scores() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scores_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* CalculateScoreRequest::mutable_scores() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:score.CalculateScoreRequest.scores)
  return _internal_mutable_scores();
}

// -------------------------------------------------------------------

// CalculateScoreResponse

// int32 final_score = 1;
inline void CalculateScoreResponse::clear_final_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_score_ = 0;
}
inline ::int32_t CalculateScoreResponse::final_score() const {
  // @@protoc_insertion_point(field_get:score.CalculateScoreResponse.final_score)
  return _internal_final_score();
}
inline void CalculateScoreResponse::set_final_score(::int32_t value) {
  _internal_set_final_score(value);
  // @@protoc_insertion_point(field_set:score.CalculateScoreResponse.final_score)
}
inline ::int32_t CalculateScoreResponse::_internal_final_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_score_;
}
inline void CalculateScoreResponse::_internal_set_final_score(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_score_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace score


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // score_2eproto_2epb_2eh
